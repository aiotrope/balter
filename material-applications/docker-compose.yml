version: "3.9"

services:
  pgdb:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - ./example-backend/pgdata:/var/lib/postgresql/data
    networks:
      - db-network

  cachedb:
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server", "--bind", "cachedb", "--port", "6379"]
    expose:
      - 6379
    ports:
      - "6379:6379"
    environment:
      REDIS_HOST: ${REDIS_HOST}
    volumes:
      - ./example-backend/redisdata:/data
    networks:
      - db-network

  backend:
    build:
      context: ./example-backend
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      REDIS_HOST: ${REDIS_HOST}
      REQUEST_ORIGIN: ${REQUEST_ORIGIN}
      PORT: ${PORT}
    links:
      - pgdb
      - cachedb
    depends_on:
      - pgdb
      - cachedb
    networks:
      - db-network

  frontend:
    build:
      context: ./example-frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
    depends_on:
      - backend
      - pgdb
      - cachedb

volumes:
  pgdb:
    name: db-volume
    driver: local
  cachedb:
    driver: local

# Networks to be created to facilitate communication between containers
networks:
  db-network:
    driver: bridge
